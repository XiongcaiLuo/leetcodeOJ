23. Merge K Sorted Linked Lists

    public ListNode mergeKLists(ListNode[] lists) {
        PriorityQueue<ListNode> pq = new PriorityQueue<ListNode>(10,new Comparator<ListNode>(){
			public int compare(ListNode l1, ListNode l2){
				if(l1.val > l2.val) return 1;
				else if(l1.val <l2.val) return -1;
				else return 0;
			}
		});
		
		ListNode dummy = new ListNode(-1);
		ListNode tail = dummy;
		for(int i = 0; i<lists.length;i++)
			pq.offer(lists[i]);
		while( pq.size() >0){
			ListNode minNode =pq.poll();              // stack :push , pop,peek  // queue: offer, poll, peek
			tail.next = minNode;
			tail = tail.next;
			if(minNode.next != null)
				pq.offer(minNode.next);
		}
		return dummy.next;
    }